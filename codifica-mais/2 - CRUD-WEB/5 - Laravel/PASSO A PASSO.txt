FEITO NO EXERCICIO ATUL:
    1. cria um projeto novo:
        laravel new exemplo-name

    2. caso esteja rodando seu projeto em outra maquina:
        sudo apt install php8.3-dom
        composer update
        php artisan key:generate
        php artisan config:cache

    3. cria um arquivo migrate para o DB(adicionar a configuracao da tabela no arquivo migration.php que foi gerado em app/migrations/_create_categorias_table.php):
        php artisan make:migration create_categorias_table 
    
    4. cria um arquivo migrate para o DB(adicionar a configuracao da tabela no arquivo migration.php que foi gerado em app/migrations/_create_unidades_medidas_table.php):
        php artisan make:migration create_unidades_medidas_table
            
    5. cria o modelo Produto e o parametro -m ja cria o arquivo migrate para o DB(adicionar a configuracao da tabela no arquivo migration.php que foi gerado em app/migrations/_create_produtos_table.php)(configurar o modelo app/Models/Produto.php. Definir as colunas que podem ser atribuídas em massa, usando a propriedade $fillable):
        php artisan make:model Produto -m

    6. faz o migrate:
        php artisan migrate
    

    7. criando os LAYOUT (componentes):
        criar uma pasta chamada
        php artisan make:component layout -–view

    7.1 criar as VIEWS (blade):
        Criar os arquivos HTML(*.blade.php) em resources/views/
        No caso desse projeto, por o HTML de:
            'listagem' em resources/views/produtos/index.blade.php
            'formulario' em resources/views/produtos/formulario.blade.php




    8. cria o Controller para Gerenciar os Produtos, que vai lidar com as operações CRUD:
        php artisan make:controller ProdutoController --resource

    9. configurar o controller:
        definir funcoes, return de views, etc

    10. definir as Rotas:
        no arquivo routes/web.php, adicione as rotas para o controller ProdutoController

    14. iniciar o projeto: 
        sudo php artisan serve --port 80


oq sao os componentes?

Criando componentes:
    php artisan make:component Aleta
    php artisan make:component Titulo
;

Criando componentes anônimos:
    Se quisermos criar um componente anônimo, como nosso layout,
    poderíamos executar: 
        php artisan make:component layout –-view
    Como não há classe, podemos deixar o nome em minúsculo mesmo.
;